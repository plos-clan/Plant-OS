macro(mkheader arg1)
  set(HEADER_FILE "${arg1}.h")
  file(WRITE ${HEADER_FILE} "// Generated by macro 'mkheader'.\n")
  file(APPEND ${HEADER_FILE} "// This file is automatically generated, please do not modify it.\n")
  file(APPEND ${HEADER_FILE} "#pragma once\n")

  file(GLOB H_FILES "${arg1}/*.h")
  list(LENGTH H_FILES HEADER_FILES_LENGTH)
  if(${HEADER_FILES_LENGTH} GREATER 0)
    file(APPEND ${HEADER_FILE} "#ifdef __cplusplus\n")
    file(APPEND ${HEADER_FILE} "extern \"C\" {\n")
    file(APPEND ${HEADER_FILE} "#endif\n")
    foreach(HEADER ${H_FILES})
      file(RELATIVE_PATH HEADER_RELATIVE_PATH "${CMAKE_CURRENT_LIST_DIR}" ${HEADER})
      file(APPEND ${HEADER_FILE} "#include \"${HEADER_RELATIVE_PATH}\"\n")
    endforeach()
    file(APPEND ${HEADER_FILE} "#ifdef __cplusplus\n")
    file(APPEND ${HEADER_FILE} "}\n")
    file(APPEND ${HEADER_FILE} "#endif\n")
  endif()

  file(GLOB HPP_FILES "${arg1}/*.hpp")
  list(LENGTH HPP_FILES HEADER_FILES_LENGTH)
  if(${HEADER_FILES_LENGTH} GREATER 0)
    file(APPEND ${HEADER_FILE} "#ifdef __cplusplus\n")
    foreach(HEADER ${HPP_FILES})
      file(RELATIVE_PATH HEADER_RELATIVE_PATH "${CMAKE_CURRENT_LIST_DIR}" ${HEADER})
      file(APPEND ${HEADER_FILE} "#include \"${HEADER_RELATIVE_PATH}\"\n")
    endforeach()
    file(APPEND ${HEADER_FILE} "#endif\n")
  endif()
endmacro(mkheader)

macro(mkheader_h arg1)
  set(HEADER_FILE "${arg1}.h")
  file(WRITE ${HEADER_FILE} "// Generated by macro 'mkheader'.\n")
  file(APPEND ${HEADER_FILE} "// This file is automatically generated, please do not modify it.\n")
  file(APPEND ${HEADER_FILE} "#pragma once\n")

  file(GLOB H_FILES "${arg1}/*.h")
  list(LENGTH H_FILES HEADER_FILES_LENGTH)
  if(${HEADER_FILES_LENGTH} GREATER 0)
    file(APPEND ${HEADER_FILE} "#ifdef __cplusplus\n")
    file(APPEND ${HEADER_FILE} "extern \"C\" {\n")
    file(APPEND ${HEADER_FILE} "#endif\n")
    foreach(HEADER ${H_FILES})
      file(RELATIVE_PATH HEADER_RELATIVE_PATH "${CMAKE_CURRENT_LIST_DIR}" ${HEADER})
      file(APPEND ${HEADER_FILE} "#include \"${HEADER_RELATIVE_PATH}\"\n")
    endforeach()
    file(APPEND ${HEADER_FILE} "#ifdef __cplusplus\n")
    file(APPEND ${HEADER_FILE} "}\n")
    file(APPEND ${HEADER_FILE} "#endif\n")
  endif()
endmacro(mkheader_h)

macro(mkheader_hpp arg1)
  set(HEADER_FILE "${arg1}.hpp")
  file(WRITE ${HEADER_FILE} "// Generated by macro 'mkheader'.\n")
  file(APPEND ${HEADER_FILE} "// This file is automatically generated, please do not modify it.\n")
  file(APPEND ${HEADER_FILE} "#pragma once\n")

  file(GLOB HPP_FILES "${arg1}/*.hpp")
  list(LENGTH HPP_FILES HEADER_FILES_LENGTH)
  if(${HEADER_FILES_LENGTH} GREATER 0)
    foreach(HEADER ${HPP_FILES})
      file(RELATIVE_PATH HEADER_RELATIVE_PATH "${CMAKE_CURRENT_LIST_DIR}" ${HEADER})
      file(APPEND ${HEADER_FILE} "#include \"${HEADER_RELATIVE_PATH}\"\n")
    endforeach()
  endif()
endmacro(mkheader_hpp)

macro(mkheader_recurse arg1)
  set(HEADER_FILE "${arg1}.h")
  file(WRITE ${HEADER_FILE} "// Generated by macro 'mkheader'.\n")
  file(APPEND ${HEADER_FILE} "// This file is automatically generated, please do not modify it.\n")
  file(APPEND ${HEADER_FILE} "#pragma once\n")

  file(GLOB_RECURSE H_FILES "${arg1}/*.h")
  list(LENGTH H_FILES HEADER_FILES_LENGTH)
  if(${HEADER_FILES_LENGTH} GREATER 0)
    file(APPEND ${HEADER_FILE} "#ifdef __cplusplus\n")
    file(APPEND ${HEADER_FILE} "extern \"C\" {\n")
    file(APPEND ${HEADER_FILE} "#endif\n")
    foreach(HEADER ${H_FILES})
      file(READ ${HEADER} HEADER_CONTENT)
      string(FIND "${HEADER_CONTENT}" "// Generated by macro 'mkheader'." GENERATED_POS)
      if(${GENERATED_POS} EQUAL -1)
        file(RELATIVE_PATH HEADER_RELATIVE_PATH "${CMAKE_CURRENT_LIST_DIR}" ${HEADER})
        file(APPEND ${HEADER_FILE} "#include \"${HEADER_RELATIVE_PATH}\"\n")
      endif()
    endforeach()
    file(APPEND ${HEADER_FILE} "#ifdef __cplusplus\n")
    file(APPEND ${HEADER_FILE} "}\n")
    file(APPEND ${HEADER_FILE} "#endif\n")
  endif()

  file(GLOB_RECURSE HPP_FILES "${arg1}/*.hpp")
  list(LENGTH HPP_FILES HEADER_FILES_LENGTH)
  if(${HEADER_FILES_LENGTH} GREATER 0)
    file(APPEND ${HEADER_FILE} "#ifdef __cplusplus\n")
    foreach(HEADER ${HPP_FILES})
      file(READ ${HEADER} HEADER_CONTENT)
      string(FIND "${HEADER_CONTENT}" "// Generated by macro 'mkheader'." GENERATED_POS)
      if(${GENERATED_POS} EQUAL -1)
        file(RELATIVE_PATH HEADER_RELATIVE_PATH "${CMAKE_CURRENT_LIST_DIR}" ${HEADER})
        file(APPEND ${HEADER_FILE} "#include \"${HEADER_RELATIVE_PATH}\"\n")
      endif()
    endforeach()
    file(APPEND ${HEADER_FILE} "#endif\n")
  endif()
endmacro(mkheader_recurse)

macro(mkheader_h_recurse arg1)
  set(HEADER_FILE "${arg1}.h")
  file(WRITE ${HEADER_FILE} "// Generated by macro 'mkheader'.\n")
  file(APPEND ${HEADER_FILE} "// This file is automatically generated, please do not modify it.\n")
  file(APPEND ${HEADER_FILE} "#pragma once\n")

  file(GLOB_RECURSE H_FILES "${arg1}/*.h")
  list(LENGTH H_FILES HEADER_FILES_LENGTH)
  if(${HEADER_FILES_LENGTH} GREATER 0)
    file(APPEND ${HEADER_FILE} "#ifdef __cplusplus\n")
    file(APPEND ${HEADER_FILE} "extern \"C\" {\n")
    file(APPEND ${HEADER_FILE} "#endif\n")
    foreach(HEADER ${H_FILES})
      file(READ ${HEADER} HEADER_CONTENT)
      string(FIND "${HEADER_CONTENT}" "// Generated by macro 'mkheader'." GENERATED_POS)
      if(${GENERATED_POS} EQUAL -1)
        file(RELATIVE_PATH HEADER_RELATIVE_PATH "${CMAKE_CURRENT_LIST_DIR}" ${HEADER})
        file(APPEND ${HEADER_FILE} "#include \"${HEADER_RELATIVE_PATH}\"\n")
      endif()
    endforeach()
    file(APPEND ${HEADER_FILE} "#ifdef __cplusplus\n")
    file(APPEND ${HEADER_FILE} "}\n")
    file(APPEND ${HEADER_FILE} "#endif\n")
  endif()
endmacro(mkheader_h_recurse)

macro(mkheader_hpp_recurse arg1)
  set(HEADER_FILE "${arg1}.hpp")
  file(WRITE ${HEADER_FILE} "// Generated by macro 'mkheader'.\n")
  file(APPEND ${HEADER_FILE} "// This file is automatically generated, please do not modify it.\n")
  file(APPEND ${HEADER_FILE} "#pragma once\n")

  file(GLOB_RECURSE HPP_FILES "${arg1}/*.hpp")
  list(LENGTH HPP_FILES HEADER_FILES_LENGTH)
  if(${HEADER_FILES_LENGTH} GREATER 0)
    foreach(HEADER ${HPP_FILES})
      file(READ ${HEADER} HEADER_CONTENT)
      string(FIND "${HEADER_CONTENT}" "// Generated by macro 'mkheader'." GENERATED_POS)
      if(${GENERATED_POS} EQUAL -1)
        file(RELATIVE_PATH HEADER_RELATIVE_PATH "${CMAKE_CURRENT_LIST_DIR}" ${HEADER})
        file(APPEND ${HEADER_FILE} "#include \"${HEADER_RELATIVE_PATH}\"\n")
      endif()
    endforeach()
  endif()
endmacro(mkheader_hpp_recurse)
