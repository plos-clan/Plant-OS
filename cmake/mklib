macro(addlib arg1)
  add_library(${arg1} SHARED ${ARGN})
  add_library(${arg1}-s STATIC ${ARGN})
  set_target_properties(${arg1}-s PROPERTIES OUTPUT_NAME ${arg1})
  if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
    target_link_options(${arg1} PRIVATE -Wl,-z,notext)
  endif()
endmacro(addlib)

macro(tgtlib arg1)
  target_link_libraries(${arg1} ${ARGN})
  set(ARGN_S ${ARGN})
  list(TRANSFORM ARGN_S REPLACE "(.+)" "\\1-s")
  target_link_libraries(${arg1}-s ${ARGN_S})
endmacro(tgtlib)

macro(libdef arg1)
  target_compile_definitions(${arg1} PRIVATE ${ARGN})
  target_compile_definitions(${arg1}-s PRIVATE ${ARGN})
endmacro(libdef)

macro(testexec arg1)
  add_executable(${arg1}-test ${ARGN})
endmacro(testexec)

macro(testlib arg1)
  target_link_libraries(${arg1}-test ${ARGN})
endmacro(testlib)

macro(benchexec arg1)
  add_executable(${arg1}-bench ${ARGN})
endmacro(benchexec)

macro(benchlib arg1)
  target_link_libraries(${arg1}-bench ${ARGN})
endmacro(benchlib)

macro(mklib arg1)
  file(GLOB_RECURSE asm_files "*.asm")
  file(GLOB_RECURSE c_files "*.c")
  file(GLOB_RECURSE cpp_files "*.cpp")
  addlib(${arg1} ${asm_files} ${c_files} ${cpp_files})
endmacro(mklib)

macro(utillib arg1)
  file(GLOB_RECURSE asm_files "${PROJECT_SOURCE_DIR}/src/${arg1}/*.asm")
  file(GLOB_RECURSE c_files "${PROJECT_SOURCE_DIR}/src/${arg1}/*.c")
  file(GLOB_RECURSE cpp_files "${PROJECT_SOURCE_DIR}/src/${arg1}/*.cpp")
  addlib(util-${arg1} ${asm_files} ${c_files} ${cpp_files})
endmacro(utillib)
