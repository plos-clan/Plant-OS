import os
from ..helper import *
from .cfg import CFileGenerator


def mkheader(name: str, srcdir: str = None, workdir: str = None) -> int:
  if name == '.' or name == '..': raise ValueError("Invalid value for 'name': it should not be '.' or '..'.")
  if '/' in name: raise ValueError("Invalid value for 'name': it should not contain slashes.")
  workdir = given_path_or_workdir(workdir)
  srcdir = given_path_or_default(srcdir, os.path.join(workdir, name), isdir=True)

  with CFileGenerator(f'{name}.h', workdir) as w:
    w.flag('include-generated')
    w.comment("This file is automatically generated, please do not modify it.")
    w.once()

    h_files = get_files_with_extensions(srcdir, 'h')
    hpp_files = get_files_with_extensions(srcdir, 'hpp')

    if len(h_files) > 0:
      with w.if_cpp():
        w.line('extern "C" {')
      for header in h_files:
        w.include(os.path.relpath(header, workdir))
      with w.if_cpp():
        w.line('}')

    if len(hpp_files) > 0:
      with w.if_cpp():
        for header in hpp_files:
          w.include(os.path.relpath(header, workdir))
